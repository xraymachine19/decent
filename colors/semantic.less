.set-color-bases();
.set-action();
.set-reaction();
.set-warning();
.set-info();
.set-success();
.set-failure();
.set-highlight();
.set-accent();
.set-alternate();
.set-default();

.set-color-bases(@color: @base-color;) {

	@offset: 32;

	@action-base: @color;

	.set-rep-color(@color; @turbo;);
	
	@number: @rep-color-number;

	.set-bases();

	.set-bases() when (@number >= 192) {
		@reaction-base: extract(@turbo, @number - 128);
		@alt-base: extract(@turbo, @number - @offset*2);
		@accent-base: extract(@turbo, @number - @offset);
	}

	.set-bases() when (@number > 128) and (@number < 192) {
		@reaction-base: extract(@turbo, @number - 128);
		@alt-base: extract(@turbo, @number - @offset*2);
		@accent-base: extract(@turbo, @number - @offset);
	}

	.set-bases() when (@number > 64) and (@number <= 128) {
		@reaction-base: extract(@turbo, @number + 128);
		@alt-base: extract(@turbo, @number + @offset*2);
		@accent-base: extract(@turbo, @number + @offset);
	}

	.set-bases() when (@number <= 64) {
		@reaction-base: extract(@turbo, @number + 128);
		@alt-base: extract(@turbo, @number + @offset*2);
		@accent-base: extract(@turbo, @number + @offset);

	}
}

.set-action() {
	// action means "do something," it's great for submit buttons
	// it's usually pretty close to the base color 

	.set-lumafix(@action-base);
	@action: @lumafix;
}

.set-action() when (@base-color = white) { @action: white;}
.set-action() when (@base-color = black) { @action: black;}

.set-reaction() {
	// reaction is for responding, usually after an action
	// a good second step or confirmation color 
	// reaction is typically close to being a complement of action 

	.set-lumafix(@reaction-base; @strength: 67%;);
    @reaction: @lumafix;
}

.set-reaction() when (@base-color = white) { @reaction: black;}
.set-reaction() when (@base-color = black) { @reaction: white;}

.set-alternate() {

	.set-lumafix(@alt-alt-base; @strength: 50%);
	@alt-alt-base: spin(@alt-base, 180);
	@alt-alt: @lumafix;

	.set-distance-info() {
		.set-distance(@alt-base, @info-base);
		@distance-info: @distance;
	}

	.set-distance-accent() {
		.set-distance(@alt-base, @accent-base);
		@distance-accent: @distance;
	}

	.set-alternate-base() {
		@alternate-base: @alt-base;
		@alternate-was-alternate: false;
	}

	.set-alternate-base() when (@distance-info < 100) or (@distance-accent < 100) {
		@alternate-base: @alt-alt;
		@alternate-was-alternate: true;
	}

	.set-alternate-final() {
		.set-lumafix(@alternate-base; @strength: 67%;);
		@alternate: @lumafix;
	}

	.set-distance-info();
	.set-distance-accent();
	.set-alternate-base();
	.set-alternate-final();
}

.set-alternate() when (@base-color = white) or (@base-color = black) { @alternate: average(white, black);}


.set-info() {
	// info is a light blue or teal 
	// it indicates innocuous, low-urgency information

	// @info-base: extract(@turbo, 64);

	// .set-info-final() {
	// 	.set-lumafix(@info-base, @base-color, 50%);
	// 	@info:@lumafix;
	// }

	// .set-info-final();


	@blue: extract(@turbo, 64);
	@teal: extract(@turbo, 74);

	.set-distance-action() {
		.set-distance(@blue, @action-base);
		@distance-action: @distance;
	}

	.set-distance-accent() {
		.set-distance(@blue, @accent-base);
		@distance-accent: @distance;
	}

	.set-info-base() when (@distance-action < 100) or (@distance-accent < 100) {
		@info-base: @teal;
		@info-was-teal: true;
	}

	.set-info-base() when (default()) {
		@info-base: @blue;
		@info-was-teal: false;
	}

	.set-info-final() {
		.set-lumafix(@info-base; @strength: 15%;);
		@info: @lumafix;
	}

	.set-distance-action();
	.set-distance-accent();
	.set-info-base();
	.set-info-final();


}

.set-warning() {
	// warning is a high urgency version of its pairing, info
	// its orange/yellow is a complement to info's teal/blue
	// remember: warning comes before the failure, failure after

	@orange: extract(@turbo, 174);
	@yellow: extract(@turbo, 152);

	.set-distance-action() {
		.set-distance(@orange, @action-base);
		@distance-action: @distance;
	}

	.set-distance-reaction() {
		.set-distance(@orange, @reaction-base);
		@distance-reaction: @distance;
	}

	.set-warning-base() when (@distance-action < 70) or (@distance-reaction < 70) {
		@warning-base: @yellow;
		@warning-was-yellow: true;
	}

	.set-warning-base() when (default()) {
		@warning-base: @orange;
		@warning-was-yellow: false;
	}

	.set-warning-final() when (@warning-was-yellow = true) {
		.set-lumafix(@warning-base; @strength: 5%;);
		@warning: mix(@warning-base, @lumafix, 5%);
	}

	.set-warning-final() when (default()) {
		.set-lumafix(@warning-base; @strength: 10%;);
		@warning: @lumafix;
	}

	.set-distance-action();
	.set-distance-reaction();
	.set-warning-base();
	.set-warning-final();
}

.set-success() {
	// success indicates that an action worked or a positive response came through
	// its green tells users they're good to go 

	@green: extract(@turbo, 105);
	@lightgreen: extract(@turbo, 130);

	.set-distance-action() {
		.set-distance(@green, @action-base);
		@distance-action: @distance;
	}

	.set-distance-reaction() {
		.set-distance(@green, @reaction-base);
		@distance-reaction: @distance;
	}

	.set-success-base() when (@distance-action < 100) or (@distance-reaction < 100) {
		@success-base: @lightgreen;
	}

	.set-success-base() when (default()) {
		@success-base: @green;
	}

	.set-success-final() {
		.set-lumafix(@success-base, @strength: 20%);
		@success: @lumafix;
	}

	.set-distance-action();
	.set-distance-reaction();

	.set-success-base();

	.set-success-final();
}

.set-failure() {
	// success's opposite and complement, failure's red tells the user something is wrong 
	// good for negative server responses, missing info, or drawing attention to faults

	@red: extract(@turbo, 225);
	@darkred: extract(@turbo, 240);

	.set-distance-action() {
		.set-distance(@red, @action-base);
		@distance-action: @distance;
	}

	.set-distance-reaction() {
		.set-distance(@red, @reaction-base);
		@distance-reaction: @distance;
	}

	.set-failure-base() when (@distance-action < 100) or (@distance-reaction < 100) {
		@failure-base: @darkred;
	}

	.set-failure-base() when (default()) {
		@failure-base: @red;
	}

	.set-failure-final() when (luma(@base-color) > 50%) {
		.set-lumafix(@failure-base, @base-color, 60%);
		@failure: @lumafix;
	}

	.set-failure-final() when (default()) {
		.set-lumafix(@failure-base, @base-color, 30%);
		@failure: @lumafix;
	}

	.set-distance-action();
	.set-distance-reaction();

	.set-failure-base();

	.set-failure-final();
}

.set-highlight() {
	// highlight is a bright color meant to evoke a highlighter and print text
	// depending on the base color, it can be cyan, magenta or yellow

	// implicitly supports an "auto" feature in @highlight-color

	.set-highlight-base() when (red(@base-color) > 0) {
		@highlight-base: magenta;
	}

	.set-highlight-base() when (red(@base-color) > 85) {
		@highlight-base: cyan;
	}

	.set-highlight-base() when (red(@base-color) > 170) {
		@highlight-base: #ffff00;
	}

	.set-highlight-base() when (isColor(@highlight-mode)) {
		@highlight-base: @highlight-mode;
	}

	.set-highlight-final() {
		.set-lumafix(@highlight-base, white, 50% + luma(@base-color)*.35);
		@highlight: @lumafix;
	}

	.set-highlight-base();
	.set-highlight-final();
}

.set-accent() {
	// accent is meant to be used sparingly with @action, @reaction and @alternate 
	// its extra saturation and lightness is good for drawing attention or balancing designs

	.set-lumafix(@alt-acc-base; @strength: 50%);
	@alt-acc-base: spin(@accent-base, 180);
	@alt-acc: @lumafix;

	.set-distance-warning() {
		.set-distance(@accent-base, @warning-base);
		@distance-warning: @distance;
	}

	.set-distance-highlight() {
		.set-distance(@accent-base, @highlight-base);
		@distance-highlight: @distance;
	}

	.set-new-accent-base() {
		@new-accent-base: @accent-base;
		@accent-was-alternate: false;
	}

	.set-new-accent-base() when (@distance-warning < 150) or (@distance-highlight < 150) {
		@new-accent-base: @alt-acc;
		@accent-was-alternate: true;
	}

	.set-accent-final() {
		@bright-accent-base:lighten(saturate(mix(@lumafix, @new-accent-base, 20%), 20%), 10%);
		.set-lumafix(@bright-accent-base; @strength: 20%;);
		@accent: @lumafix;
	}

	.set-distance-warning();
	.set-distance-highlight();
	.set-new-accent-base();
	.set-accent-final();




}

.set-default() {
	// default is an average of all of the other semantic colors
	// it functions as a plain, neutral color within a theme-- a good default

	.set-average(@action, @reaction, @alternate, @info, @warning, @accent, @success, @failure, @highlight;);
	@default: @average;
}