// everything defined here is considered a button within the project

.button-elements(@rules) {
  button,
  .button, 
  input[type="button"],
  input[type="submit"] 
  { @rules();}
}

// rules for button elements

.button-elements({
    .default(border-radius);
    .default(box-shadow);
  
    display: inline;
    font: inherit;
    padding: 1em / @golden-ratio;
    border: none;
    .default(border-width);
    .button-color(@default);
    max-width: @aside-width;
    line-height: 1;
    text-align: center;
    vertical-align: middle;
    background-image: none;
    outline: none;
    white-space: nowrap;
    text-decoration: none;
    touch-action: manipulation;
    cursor: pointer;
    transform: scale(1);
    transition: .08s linear;
    .no-user-select;

    &:active {
      transform: scale(.99);
      box-shadow: none;
    }

    each(@semantic-color-names, {
      @color: @@value;
      &.@{value} { .button-color(@color);}
    });
});

// button-color handles all the button color rules

.button-color(@color) {
  // .contrast(color, @color);
  // background: @color;
  // .colorize(@color);

  // use white text unless the contrast would be too low

  .set-contrast-ceiling(@color);

  // preferentially tint if we can
  .color() when (@contrast-ceiling > 3) {
    color: white;
  }

  // if not, shade with higher contrast
  .color() when (default()) {
    .contrast(color; @color; 4.5; shade;);
  }

  .color();
  background-color: @color;
  .contrast(border-color; @color; 1.5; shade;);
}