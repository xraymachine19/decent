// All CSS properties have a corresponding variable here
// Use with '.default(property-name)' to invoke default properties

// eg '.default(padding);' is equivalent to 'padding: @padding;'

@test: 'test';

@css-property-names: background,
background-attachment,
background-clip,
background-color,
background-image,
background-origin,
background-position,
background-repeat,
background-size,
border,
border-bottom,
border-bottom-color,
border-bottom-left-radius,
border-bottom-right-radius,
border-bottom-style,
border-bottom-width,
border-color,
border-image,
border-image-outset,
border-image-repeat,
border-image-slice,
border-image-source,
border-image-width,
border-left,
border-left-color,
border-left-style,
border-left-width,
border-radius,
border-right,
border-right-color,
border-right-style,
border-right-width,
border-style,
border-top,
border-top-color,
border-top-left-radius,
border-top-right-radius,
border-top-style,
border-top-width,
border-width,
color,
opacity,
height,
max-height,
max-width,
min-height,
min-width,
width,
content,
quotes,
counter-reset,
counter-increment,
align-content,
align-items,
align-self,
flex,
flex-basis,
flex-direction,
flex-flow,
flex-grow,
flex-shrink,
flex-wrap,
justify-content,
order,
font,
font-family,
font-size,
font-size-adjust,
font-stretch,
font-style,
font-variant,
font-weight,
list-style,
list-style-image,
list-style-position,
list-style-type,
margin,
margin-bottom,
margin-left,
margin-right,
margin-top,
column-count,
column-fill,
column-gap,
column-rule,
column-rule-color,
column-rule-style,
column-rule-width,
column-span,
column-width,
columns,
outline,
outline-color,
outline-offset,
outline-style,
outline-width,
padding,
padding-bottom,
padding-left,
padding-right,
padding-top,
page-break-after,
page-break-before,
page-break-inside,
border-collapse,
border-spacing,
caption-side,
empty-cells,
table-layout,
direction,
tab-size,
text-align,
text-align-last,
text-decoration,
text-decoration-color,
text-decoration-line,
text-decoration-style,
text-indent,
text-justify,
text-overflow,
text-shadow,
text-transform,
line-height,
vertical-align,
letter-spacing,
word-spacing,
white-space,
word-break,
word-wrap,
backface-visibility,
perspective,
perspective-origin,
transform,
transform-origin,
transform-style,
transition,
transition-delay,
transition-duration,
transition-property,
transition-timing-function,
display,
position,
top,
right,
bottom,
left,
float,
clear,
z-index,
overflow,
overflow-x,
overflow-y,
resize,
clip,
visibility,
cursor,
box-shadow,
box-sizing;

// Animation Properties
// @animation: @test; // Specifies the keyframe-based animations.
// @animation-delay: @test; // Specifies when the animation will start.
// @animation-direction: @test; // Specifies whether the animation should play in reverse on alternate cycles or not.
// @animation-duration: @test; // Specifies the number of seconds or milliseconds an animation should take to complete one cycle.
// @animation-fill-mode: @test; // Specifies how a CSS animation should apply styles to its target before and after it is executing.
// @animation-iteration-count: @test; // Specifies the number of times an animation cycle should be played before stopping.
// @animation-name: @test; // Specifies the name of @keyframes defined animations that should be applied to the selected element.
// @animation-play-state: @test; // Specifies whether the animation is running or paused.
// @animation-timing-function: @test; // Specifies how a CSS animation should progress over the duration of each cycle.

// Background Properties
@background: @background-color; // Defines a variety of background properties within one declaration.
@background-attachment: scroll; // Specify whether the background image is fixed in the viewport or scrolls.
@background-clip: border-box; // Specifies the painting area of the background.
@background-color: overlay(@gray, @action); // Defines an element's background color.
@background-image: none; // Defines an element's background image.
@background-origin: padding-box; // Specifies the positioning area of the background images.
@background-position: top center; // Defines the origin of a background image.
@background-repeat: no-repeat; // Specify whether/how the background image is tiled.
@background-size: auto; // Specifies the size of the background images.

// Border Properties
@border: @border-width @border-style @border-color; // Sets the width, style, and color for all four sides of an element's border.
@border-bottom: @border; // Sets the width, style, and color of the bottom border of an element.
@border-bottom-color: @border-color; // Sets the color of the bottom border of an element.
@border-bottom-left-radius: @border-radius; // Defines the shape of the bottom-left border corner of an element.
@border-bottom-right-radius: @border-radius; // Defines the shape of the bottom-right border corner of an element.
@border-bottom-style: @border-style; // Sets the style of the bottom border of an element.
@border-bottom-width: @border-width; // Sets the width of the bottom border of an element.
@border-color: @default; // Sets the color of the border on all the four sides of an element.
@border-image: none; // Specifies how an image is to be used in place of the border styles.
@border-image-outset: 0; // Specifies the amount by which the border image area extends beyond the border box.
@border-image-repeat: stretch; // Specifies whether the image-border should be repeated, rounded or stretched.
@border-image-slice: 100%; // Specifies the inward offsets of the image-border.
@border-image-source: none; // Specifies the location of the image to be used as a border.
@border-image-width: 1; // Specifies the width of the image-border.
@border-left: @border; // Sets the width, style, and color of the left border of an element.
@border-left-color: @border-color; // Sets the color of the left border of an element.
@border-left-style: @border-style; // Sets the style of the left border of an element.
@border-left-width: @border-width; // Sets the width of the left border of an element.
@border-radius: 6px; // Defines the shape of the border corners of an element.
@border-right: @border; // Sets the width, style, and color of the right border of an element.
@border-right-color: @border-color; // Sets the color of the right border of an element.
@border-right-style: @border-style; // Sets the style of the right border of an element.
@border-right-width: @border-width; // Sets the width of the right border of an element.
@border-style: solid; // Sets the style of the border on all the four sides of an element.
@border-top: @border; // Sets the width, style, and color of the top border of an element.
@border-top-color: @border-color; // Sets the color of the top border of an element.
@border-top-left-radius: @border-radius; // Defines the shape of the top-left border corner of an element.
@border-top-right-radius: @border-radius; // Defines the shape of the top-right border corner of an element.
@border-top-style: @border-style; // Sets the style of the top border of an element.
@border-top-width: @border-width; // Sets the width of the top border of an element.
@border-width: 1px; // Sets the width of the border on all the four sides of an element.

// Color Properties

@color: @base-color; // Specify the color of the text of an element.
@opacity: 1; // Specifies the transparency of an element.

// Dimension Properties
@height: auto; // Specify the height of an element.
@max-height: none; // Specify the maximum height of an element.
@max-width: floor(@text-measure / @golden-ratio) * 1rem; // Specify the maximum width of an element.
@min-height: 0; // Specify the minimum height of an element.
@min-width: 0; // Specify the minimum width of an element.
@width: auto; // Specify the width of an element.

// Generated Content Properties
@content: normal; // Inserts generated content.
@quotes: inherit; // Specifies quotation marks for embedded quotations.
@counter-reset: none; // Creates or resets one or more counters.
@counter-increment: none; // Increments one or more counter values.

// Flexible Box Layout
@align-content: stretch; // Specifies the alignment of flexible container's items within the flex container.
@align-items: stretch; // Specifies the default alignment for items within the flex container.
@align-self: auto; // Specifies the alignment for selected items within the flex container.
@flex: 0 1 auto; // Specifies the components of a flexible length.
@flex-basis: auto; // Specifies the initial main size of the flex item.
@flex-direction: row; // Specifies the direction of the flexible items.
@flex-flow: row nowrap; // A shorthand property for the flex-direction and the flex-wrap properties.
@flex-grow: 0; // Specifies how the flex item will grow relative to the other items inside the flex container.
@flex-shrink: 1; // Specifies how the flex item will shrink relative to the other items inside the flex container.
@flex-wrap: nowrap; // Specifies whether the flexible items should wrap or not.
@justify-content: flex-start; // Specifies how flex items are aligned along the main axis of the flex container after any flexible lengths and auto margins have been resolved.
@order: 0; // Specifies the order in which a flex items are displayed and laid out within a flex container.

// Font Properties
@font: @font-style @font-variant @font-weight @font-size @font-family; // Defines a variety of font properties within one declaration.
@font-family: @font-family-sans-serif; // Defines a list of fonts for element.
@font-size: 20px; // Defines the font size for the text.
@font-size-adjust: none; // Preserves the readability of text when font fallback occurs.
@font-stretch: normal; // Selects a normal, condensed, or expanded face from a font.
@font-style: normal; // Defines the font style for the text.
@font-variant: normal; // Specify the font variant.
@font-weight: normal; // Specify the font weight of the text.

// List Properties
@list-style: @list-style-type @list-style-position @list-style-image; // Defines the display style for a list and list elements.
@list-style-image: none; // Specifies the image to be used as a list-item marker.
@list-style-position: outside; // Specifies the position of the list-item marker.
@list-style-type: disc; // Specifies the marker style for a list-item.

//Margin Properties
@margin: 1em; // Sets the margin on all four sides of the element.
@margin-bottom: @margin; // Sets the bottom margin of the element.
@margin-left: @margin; // Sets the left margin of the element.
@margin-right: @margin; // Sets the right margin of the element.
@margin-top: @margin; // Sets the top margin of the element.

//Multi-column Layout Properties
@column-count: auto; // Specifies the number of columns in a multi-column element.
@column-fill: balance; // Specifies how columns will be filled.
@column-gap: @margin; // Specifies the gap between the columns in a multi-column element.
@column-rule: @column-rule-width @column-rule-style @column-rule-color; // Specifies a straight line, or "rule", to be drawn between each column in a multi-column element.
@column-rule-color: @border-color; // Specifies the color of the rules drawn between columns in a multi-column layout.
@column-rule-style: @border-style; // Specifies the style of the rule drawn between the columns in a multi-column layout.
@column-rule-width: @border-width; // Specifies the width of the rule drawn between the columns in a multi-column layout.
@column-span: none; // Specifies how many columns an element spans across in a multi-column layout.
@column-width: auto; // Specifies the optimal width of the columns in a multi-column element.
@columns: @column-width @column-count; // A shorthand property for setting column-width and column-count properties.

// Outline Properties
@outline: @outline-width @outline-style @outline-color; // Sets the width, style, and color for all four sides of an element's outline.
@outline-color: @border-color; // Sets the color of the outline.
@outline-offset: 0; // Set the space between an outline and the border edge of an element.
@outline-style: @border-style; // Sets a style for an outline.
@outline-width: @border-width; // Sets the width of the outline.

// Padding Properties
@padding: 1rem * @golden-ratio; // Sets the padding on all four sides of the element.
@padding-bottom: @padding; // Sets the padding to the bottom side of an element.
@padding-left: @padding; // Sets the padding to the left side of an element.
@padding-right: @padding; // Sets the padding to the right side of an element.
@padding-top: @padding; // Sets the padding to the top side of an element.

//Print Properties
@page-break-after: auto; // Insert a page breaks after an element.
@page-break-before: auto; // Insert a page breaks before an element.
@page-break-inside: auto; // Insert a page breaks inside an element.

//Table Properties
@border-collapse: @test; // Specifies whether table cell borders are connected or separated.
@border-spacing: @test; // Sets the spacing between the borders of adjacent table cells.
@caption-side: @test; // Specify the position of table's caption.
@empty-cells: @test; // Show or hide borders and backgrounds of empty table cells.
@table-layout: @test; // Specifies a table layout algorithm.

// Text Properties
@direction: @test; // Define the text direction/writing direction.
@tab-size: @test; // Specifies the length of the tab character.
@text-align: @test; // Sets the horizontal alignment of inline content.
@text-align-last: @test; // Specifies how the last line of a block or a line right before a forced line break is aligned when text-align is justify.
@text-decoration: @test; // Specifies the decoration added to text.
@text-decoration-color: @test; // Specifies the color of the text-decoration-line.
@text-decoration-line: @test; // Specifies what kind of line decorations are added to the element.
@text-decoration-style: @test; // Specifies the style of the lines specified by the text-decoration-line property
@text-indent: @test; // Indent the first line of text.
@text-justify: @test; // Specifies the justification method to use when the text-align property is set to justify.
@text-overflow: @test; // Specifies how the text content will be displayed, when it overflows the block containers.
@text-shadow: @test; // Applies one or more shadows to the text content of an element.
@text-transform: @test; // Transforms the case of the text.
@line-height: ceil(@font-size * @golden-ratio * (@text-measure/55)); // Sets the height between lines of text.
@vertical-align: @test; // Sets the vertical positioning of an element relative to the current text baseline.
@letter-spacing: @test; // Sets the extra spacing between letters.
@word-spacing: @test; // Sets the spacing between words.
@white-space: @test; // Specifies how white space inside the element is handled.
@word-break: @test; // Specifies how to break lines within words.
@word-wrap: @test; // Specifies whether to break words when the content overflows the boundaries of its container.

// Transform Properties
@backface-visibility: visible; // Specifies whether or not the "back" side of a transformed element is visible when facing the user.
@perspective: none; // Defines the perspective from which all child elements of the object are viewed.
@perspective-origin: 50% 50%; // Defines the origin (the vanishing point for the 3D space) for the perspective property.
@transform: none; // Applies a 2D or 3D transformation to an element.
@transform-origin: 50% 50% 0; // Defines the origin of transformation for an element.
@transform-style: flat; // Specifies how nested elements are rendered in 3D space.

// Transitions Properties
@transition: @transition-property @transition-duration @transition-timing-function @transition-delay; // Defines the transition between two states of an element.
@transition-delay: 0s; // Specifies when the transition effect will start.
@transition-duration: 0s; // Specifies the number of seconds or milliseconds a transition effect should take to complete.
@transition-property: all; // Specifies the names of the CSS properties to which a transition effect should be applied.
@transition-timing-function: ease; // Specifies the speed curve of the transition effect.

// Visual formatting Properties
@display: block; // Specifies how an element is displayed onscreen.
@position: absolute; // Specifies how an element is positioned.
@top: 0; // Specify the location of the top edge of the positioned element.
@right: 0; // Specify the location of the right edge of the positioned element.
@bottom: 0; // Specify the location of the bottom edge of the positioned element.
@left: 0; // Specify the location of the left edge of the positioned element.
@float: left; // Specifies whether or not a box should float.
@clear: both; // Specifies the placement of an element in relation to floating elements.
@z-index: 10; // Specifies a layering or stacking order for positioned elements.
@overflow: show; // Specifies the treatment of content that overflows the element's box.
@overflow-x: show; // Specifies how to manage the content when it overflows the width of the element's content area.
@overflow-y: show; // Specifies how to manage the content when it overflows the height of the element's content area.
@resize: none; // Specifies whether or not an element is resizable by the user.
@clip: auto; // Defines the clipping region.
@visibility: visible; // Specifies whether or not an element is visible.
@cursor: pointer; // Specify the type of cursor.
@box-shadow: 0 1px 2px @shadow-color; // Applies one or more drop-shadows to the element's box.
@box-sizing: border-box; // Alter the default CSS box model.